<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
<style>
canvas {
    border:1px solid #d3d3d3;
    background-color: #f1f1f1;
}

*{box-sizing: border-box;
  font-family: "Times New Roman", Times, serif;
  font-variant: small-caps;}

body {
  width=100%;
  height=100%;
}

.panel {
  padding: 10px;
  text-align:center;
  position:absolute;
  top:10%;
  width:20%;
  height:90%;
  border-width:thick;
  border-color: yellow;
  margin: 0;
}

#rightpanel{
  right:0px;
  background-color: blue;
}
#leftpanel{
  left:0px;
  background-color: red;
}

.canvascontainer {
  position:absolute;
  top:10%;
  left:20%;
  right:20%;
  width:60%;
  height:90%;
  background-color:white;
  text-align:center;
}

.header {
  position: absolute;
  width:100%;
  top:0px;
  background-color:white;
  text-align:center;
}
</style>
</head>
<body onload="startGame()">
<script>

var myGamePiece;

function startGame() {
    myGamePiece = new component(30, 30, "red", 10, 120);
    myGameArea.start();
}

var myGameArea = {
    canvas : document.createElement("canvas"),
    start : function() {
        this.canvas.width = 400;
        this.canvas.height = 400;
        this.context = this.canvas.getContext("2d");
        elem = document.getElementById("container");
        elem.insertBefore(this.canvas, elem.childNodes[0]);
        },
    clear : function() {
        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);
        }
}

function grid(xpts,ypts,size){
  this.xpts=xpts;
  this.ypts=ypts;
  this.size=size;

  var i;
  for (i = 0; i < 5; i++) {
  }
}



function component(width, height, color, x, y) {
    this.width = width;
    this.height = height;
    this.speedX = 0;
    this.speedY = 0;
    this.x = x;
    this.y = y;
    this.update = function() {
        ctx = myGameArea.context;
        ctx.fillStyle = color;
        ctx.fillRect(this.x, this.y, this.width, this.height);
    }
    this.newPos = function() {
        this.x += this.speedX;
        this.y += this.speedY;
    }
}

function updateGameArea() {
    myGameArea.clear();
    myGamePiece.newPos();
    myGamePiece.update();
}

function moveup() {
    myGamePiece.speedY = -1;
}

function movedown() {
    myGamePiece.speedY = 1;
}

function moveleft() {
    myGamePiece.speedX = -1;
}

function moveright() {
    myGamePiece.speedX = 1;
}

function clearmove() {
    myGamePiece.speedX = 0;
    myGamePiece.speedY = 0;
}
</script>
<div class="header">
  <h1> Testing Ground for Network Games</h1>
</div>
<div class="panel" id="leftpanel">

  <button onmousedown="moveup()" onmouseup="clearmove()" ontouchstart="moveup()">UP</button><br><br>
  <button onmousedown="moveleft()" onmouseup="clearmove()" ontouchstart="moveleft()">LEFT</button>
  <button onmousedown="moveright()" onmouseup="clearmove()" ontouchstart="moveright()">RIGHT</button><br><br>
  <button onmousedown="movedown()" onmouseup="clearmove()" ontouchstart="movedown()">DOWN</button>

</div>

<div class="canvascontainer" id="container">

</div>
<div class="panel" id="rightpanel">
  <button onmousedown="moveup()" onmouseup="clearmove()" ontouchstart="moveup()">UP</button><br><br>
  <button onmousedown="moveleft()" onmouseup="clearmove()" ontouchstart="moveleft()">LEFT</button>
  <button onmousedown="moveright()" onmouseup="clearmove()" ontouchstart="moveright()">RIGHT</button><br><br>
  <button onmousedown="movedown()" onmouseup="clearmove()" ontouchstart="movedown()">DOWN</button>

</div>
</body>
</html>
